<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.configuration="org.eventb.core.fwd;de.prob.units.mchBase" version="5">
<org.eventb.core.event name="'" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="INITIALISATION">
<org.eventb.core.action name="'" org.eventb.core.assignment="registered_users ≔ ∅" org.eventb.core.label="act1"/>
<org.eventb.core.action name="(" org.eventb.core.assignment="books_in_library,library_book_sets ≔ ∅,∅" org.eventb.core.label="act2"/>
<org.eventb.core.action name=")" org.eventb.core.assignment="copies_in_library,copies_on_shelf,copies_on_loan ≔ ∅,∅,∅" org.eventb.core.label="act3"/>
<org.eventb.core.action name="*" org.eventb.core.assignment="request,request_hold,notify ≔ ∅,∅,∅" org.eventb.core.label="act4"/>
</org.eventb.core.event>
<org.eventb.core.refinesMachine name="(" org.eventb.core.target="BasicLibrary"/>
<org.eventb.core.variable name=")" org.eventb.core.comment="The users registered in library system." org.eventb.core.identifier="registered_users"/>
<org.eventb.core.variable name="*" org.eventb.core.comment="The books (title) in the library." org.eventb.core.identifier="books_in_library"/>
<org.eventb.core.variable name="+" org.eventb.core.comment="Copies that the library has." org.eventb.core.identifier="copies_in_library"/>
<org.eventb.core.variable name="," org.eventb.core.comment="Copies that are in the library(On bookshelf)." org.eventb.core.identifier="copies_on_shelf"/>
<org.eventb.core.variable name="-" org.eventb.core.comment="Copies that is already on loan.(Borrow pairs)" org.eventb.core.identifier="copies_on_loan"/>
<org.eventb.core.variable name="." org.eventb.core.comment="The pairs of the book (title) and the copies in library." org.eventb.core.identifier="library_book_sets"/>
<org.eventb.core.variable name="/" org.eventb.core.comment="The request pairs." org.eventb.core.identifier="request"/>
<org.eventb.core.invariant name="2" org.eventb.core.comment="request is the pairs of books not in library and registered users." org.eventb.core.label="inv1" org.eventb.core.predicate="request ∈ (BOOK ∖ books_in_library) ⇸ registered_users "/>
<org.eventb.core.event name="3" org.eventb.core.comment="Request new book" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="RequestNewBook">
<org.eventb.core.parameter name="'" org.eventb.core.comment="user who wants to request a book" org.eventb.core.identifier="user"/>
<org.eventb.core.parameter name="(" org.eventb.core.comment="the book is required" org.eventb.core.identifier="book"/>
<org.eventb.core.guard name=")" org.eventb.core.comment="user needs to be a registered user" org.eventb.core.label="grd1" org.eventb.core.predicate="user ∈ registered_users"/>
<org.eventb.core.guard name="*" org.eventb.core.comment="book is not a book in library" org.eventb.core.label="grd2" org.eventb.core.predicate="book ∉ books_in_library"/>
<org.eventb.core.action name="+" org.eventb.core.assignment="request ≔ request ∪ {book ↦ user}" org.eventb.core.comment="add book to user pair to request list" org.eventb.core.label="act1"/>
<org.eventb.core.guard name="," org.eventb.core.comment="user has not sent request on this book before" org.eventb.core.label="grd3" org.eventb.core.predicate="book ↦ user ∉ request"/>
<org.eventb.core.guard name="-" org.eventb.core.comment="user cannot request for more than 3 books" org.eventb.core.label="grd4" org.eventb.core.predicate="card(request ▷ {user}) ∈ 0‥2"/>
<org.eventb.core.action name="." org.eventb.core.assignment="notify ≔ notify ∪ {book ↦ user}" org.eventb.core.comment="add the notification of this book to this user to the notify list." org.eventb.core.label="act2"/>
</org.eventb.core.event>
<org.eventb.core.event name="4" org.eventb.core.comment="Add request book(refine add book because this time the book is requested)" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="AddRequestBook">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="AddBook"/>
<org.eventb.core.guard name="," org.eventb.core.comment="the copy kept for the user is one of the copy added this time " org.eventb.core.label="grd7" org.eventb.core.predicate="hold_copy ⊆ copies"/>
<org.eventb.core.guard name="(" org.eventb.core.comment="book is under request" org.eventb.core.label="grd8" org.eventb.core.predicate="book ∈ dom(request)"/>
<org.eventb.core.action name=")" org.eventb.core.assignment="request ≔ request ∖ ({book} ◁ request)" org.eventb.core.comment="exclude the request" org.eventb.core.label="act5"/>
<org.eventb.core.action name="*" org.eventb.core.assignment="request_hold ≔ request_hold ∪ hold_info" org.eventb.core.comment="add the pair of user and the copy kept for this user to the request hold list" org.eventb.core.label="act6"/>
<org.eventb.core.parameter name="-" org.eventb.core.comment="users who request this book" org.eventb.core.identifier="users"/>
<org.eventb.core.parameter name="+" org.eventb.core.comment="the copy kept for the user" org.eventb.core.identifier="hold_copy"/>
<org.eventb.core.guard name="." org.eventb.core.comment="user has the request relation with this book" org.eventb.core.label="grd9" org.eventb.core.predicate="users ⊆ ran({book} ◁ request)"/>
<org.eventb.core.action name="/" org.eventb.core.assignment="notify ≔ notify" org.eventb.core.comment="notify all users hold on this book, but the notify pairs are not changed." org.eventb.core.label="act7"/>
<org.eventb.core.parameter name="0" org.eventb.core.comment="hold copy under request book title and related to user." org.eventb.core.identifier="hold_info"/>
<org.eventb.core.guard name="1" org.eventb.core.comment="Use total bijection function causer one copy can just hold for one user request for this book, and all user request for this book should have a copy hold for him." org.eventb.core.label="grd10" org.eventb.core.predicate="hold_info ∈ hold_copy ⤖ users"/>
</org.eventb.core.event>
<org.eventb.core.event name="5" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="RequestPickup">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="Borrow"/>
<org.eventb.core.parameter name="'" org.eventb.core.comment="User wants to borrow copy." org.eventb.core.identifier="user"/>
<org.eventb.core.parameter name="(" org.eventb.core.comment="The copy of the user wants to borrow." org.eventb.core.identifier="copy"/>
<org.eventb.core.guard name=")" org.eventb.core.comment="The user needs to be a registered user." org.eventb.core.label="grd1" org.eventb.core.predicate="user ∈ registered_users"/>
<org.eventb.core.guard name="*" org.eventb.core.comment="Copy is not borrowed by other users." org.eventb.core.label="grd2" org.eventb.core.predicate="copy ∈ copies_on_shelf"/>
<org.eventb.core.action name="+" org.eventb.core.assignment="copies_on_shelf ≔ copies_on_shelf ∖ {copy}" org.eventb.core.comment="Remove copy from shelf." org.eventb.core.label="act1"/>
<org.eventb.core.action name="," org.eventb.core.assignment="copies_on_loan ≔ copies_on_loan ∪ {copy ↦ user}" org.eventb.core.comment="Give user the copy and add relation." org.eventb.core.label="act2"/>
<org.eventb.core.guard name="-" org.eventb.core.comment="The user cannot hold more than 5 books." org.eventb.core.label="grd3" org.eventb.core.predicate="card(copies_on_loan ▷ {user}) ∈ 0‥4"/>
<org.eventb.core.guard name="(" org.eventb.core.comment="the user must have a request hold relation with this copy" org.eventb.core.label="grd4" org.eventb.core.predicate="copy ↦ user ∈ request_hold"/>
<org.eventb.core.action name=")" org.eventb.core.assignment="request_hold ≔ request_hold ∖ {copy ↦ user}" org.eventb.core.comment="after the user get the copy, exclude this pair from request_hold." org.eventb.core.label="act3"/>
<org.eventb.core.action name="." org.eventb.core.assignment="notify ≔ notify ∖ related_notify" org.eventb.core.comment="exclude this pair, and this user will not receive notification for this copy." org.eventb.core.label="act4"/>
<org.eventb.core.parameter name="/" org.eventb.core.comment="the notify pair shows relation of this user and this copy" org.eventb.core.identifier="related_notify"/>
<org.eventb.core.guard name="0" org.eventb.core.comment="the notify pair is related to this user and this copy" org.eventb.core.label="grd5" org.eventb.core.predicate="related_notify ∈ (ran({copy} ◁ library_book_sets) → {user})"/>
</org.eventb.core.event>
<org.eventb.core.event name="6" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="UserDegisteredWithRequest">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="UserDeregister"/>
<org.eventb.core.guard name="(" org.eventb.core.comment="user wants to degistered cannot have any request which means this user cannot in any pair of the request." org.eventb.core.label="grd3" org.eventb.core.predicate="user ∉ ran(request) "/>
</org.eventb.core.event>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="7" org.eventb.core.comment="The request hold pairs of copies and users.(This is used to keep a copy for request user.)" org.eventb.core.identifier="request_hold"/>
<org.eventb.core.invariant name="8" org.eventb.core.comment="request hold is the pairs of copies on shelf and users." org.eventb.core.label="inv2" org.eventb.core.predicate="request_hold ∈ copies_on_shelf ⤖ registered_users "/>
<org.eventb.core.invariant name=":" org.eventb.core.comment="notify is subset of notification" org.eventb.core.label="inv3" org.eventb.core.predicate="notify ⊆ notification"/>
<org.eventb.core.variable de.prob.units.inferredUnitPragmaAttribute="" de.prob.units.unitPragmaAttribute="" name="9" org.eventb.core.comment="the notify pairs" org.eventb.core.identifier="notify"/>
<org.eventb.core.event name=";" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="RemoveRequestHoldCopies">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="RemoveCopies"/>
<org.eventb.core.guard name="(" org.eventb.core.comment="copies cannot be on hold for request" org.eventb.core.label="grd3" org.eventb.core.predicate="copies ⊈ dom(request_hold)"/>
</org.eventb.core.event>
</org.eventb.core.machineFile>
